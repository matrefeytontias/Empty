cmake_minimum_required(VERSION 3.12)

### Library setup

# Generate enum struct headers from def files
find_package(Python3 REQUIRED)

set(ENUM_STRUCTS
	src/Empty/render/gl/GLEnums.def
)

foreach(ENUM ${ENUM_STRUCTS})
	# We need absolute path for proper pathing of everything
	set(ENUM ${CMAKE_CURRENT_SOURCE_DIR}/${ENUM})
	string(REPLACE ".def" ".cpp" ENUM_CPP ${ENUM})
	string(REPLACE ".def" ".hpp" ENUM_HPP ${ENUM})
	set(ENUM_SOURCES ${ENUM_SOURCES} ${ENUM_CPP} ${ENUM_HPP})
	# Add the command so the files are regenerated when the *.def files are modified
	add_custom_command(OUTPUT ${ENUM_CPP} ${ENUM_HPP}
		DEPENDS ${ENUM}
		COMMAND ${Python3_EXECUTABLE} autogen.py ${CMAKE_CURRENT_SOURCE_DIR}/src ${ENUM} utils
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
	)
	# Run it once so the files show up before the first build
	execute_process(COMMAND ${Python3_EXECUTABLE} autogen.py ${CMAKE_CURRENT_SOURCE_DIR}/src ${ENUM} utils
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
endforeach()

# Project setup
set(SOURCES
	# GLAD GL loader
	src/glad/glad.c
	src/glad/glad.h
	src/KHR/khrplatform.h
	# Empty source
	src/Empty/math/funcs.h
	src/Empty/math/mat.h
	src/Empty/math/mathutils.cpp
	src/Empty/math/mathutils.hpp
	src/Empty/math/vec.h
	src/Empty/render/Context.cpp
	src/Empty/render/Context.hpp
	src/Empty/render/gl/Buffer.h
	src/Empty/render/gl/Framebuffer.h
	src/Empty/render/gl/GLObject.h
	src/Empty/render/gl/Renderbuffer.h
	src/Empty/render/gl/Shader.h
	src/Empty/render/gl/ShaderProgram.cpp
	src/Empty/render/gl/ShaderProgram.hpp
	src/Empty/render/gl/Texture.h
	src/Empty/render/gl/Uniform.h
	src/Empty/render/gl/VertexArray.h
	src/Empty/render/gl/VertexStructure.h
	src/Empty/utils/EnumBitfield.h
	src/Empty/utils/macros.h
	src/Empty/utils/noncopyable.h
	src/Empty/utils/utils.cpp
	src/Empty/utils/utils.hpp
	# Enum structs autogenerated from *.def files
	${ENUM_SOURCES}
)

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR}/src PREFIX "Source Files" FILES ${SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR}/src PREFIX "Enum Definition Files" FILES ${ENUM_STRUCTS})

add_library(Empty ${SOURCES} ${ENUM_STRUCTS})
target_include_directories(Empty PUBLIC src)

target_compile_features(Empty PRIVATE cxx_std_17)
